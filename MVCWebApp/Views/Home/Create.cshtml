@model MVCWebApp.Models.Student

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                Female @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } })
                Male @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Course, htmlAttributes: new { @class="control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Course, Enumerable.Empty<SelectListItem>(),"--SELECT--",new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnSubmit" value="Create" class="btn btn-default" onclick="myfunction()" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script type="text/javascript">
    $(document).ready(function ()
    {
        //Calling method to get Json data
        $.getJSON("/Home/BindDropDownList", function (data)
        {
            $.each(data, function (i, data)
            {
                //Binding Course name with DropDownList
                $('<option>',
                    {
                        value: data.Id,
                        text: data.Name
                    }).html(data.Name).appendTo("#Course");
            });
        });
    });
    function myfunction()
    {
        debugger
        var Name = $("#Name").val();
        var Address = $("#Address").val();
        var Gender = $('input[name=Gender]:checked').val();
        var phone = $("#Phone").val();
        var course = $('#Course option:selected').val();
        //Using Ajax request call /Home/Create method and insert data in Db 
        $.ajax({
            type: "Get",
            url: "/Home/Add",
            data:
                {
                    Name: Name,
                    Address: Address,
                    Gender: Gender,
                    Phone: phone,
                    Course:course
                },
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function()
            {
                alert('Data Inserted Successful');
            }
        });
    }
</script>